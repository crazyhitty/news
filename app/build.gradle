apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

/**
 * Generate version code on the bases of current number of commits.
 *
 * Source: https://gist.github.com/paramsen/4a92c9230d799caeb3b90897da27a80c
 *
 * @return
 * Integer representing total number of commits.
 */
static def generateVersionCode() {
    def result = "git rev-list HEAD --count".execute().text.trim() //unix
    if(result.empty) result = "PowerShell -Command git rev-list HEAD --count".execute().text.trim() //windows
    if(result.empty) throw new RuntimeException("Could not generate versioncode on this platform? Cmd output: ${result.text}")
    return result.toInteger()
}

def majorVersion = 0

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.crazyhitty.chdev.ks.news"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode generateVersionCode()
        versionName "${majorVersion}.${getVersionCode()}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            buildConfigField 'String', 'API_KEY', config.apiKey
        }
        release {
            buildConfigField 'String', 'API_KEY', config.apiKey
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    testOptions.unitTests{
        returnDefaultValues = true
        all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }

        }
    }
}

kapt {
    generateStubs = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Tests
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.7.1'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    // Kotlin
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // Android support
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    // Rxjava 2
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    implementation 'io.reactivex.rxjava2:rxjava:2.1.8'

    // Dagger 2
    kapt 'com.google.dagger:dagger-compiler:2.14.1'
    implementation 'com.google.dagger:dagger:2.14.1'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.moshi:moshi-kotlin:1.5.0'

    // Anko Commons
    implementation "org.jetbrains.anko:anko-commons:$anko_version"

    // Calligraphy
    implementation 'uk.co.chrisjenx:calligraphy:2.3.0'

    // Fresco
    implementation 'com.facebook.fresco:fresco:1.8.1'

    // Stetho
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'
}
